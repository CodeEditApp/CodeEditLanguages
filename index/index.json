{"includedArchiveIdentifiers":["codeeditlanguages.CodeEditLanguages"],"interfaceLanguages":{"swift":[{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/add-languages","title":"Add Languages","type":"article"},{"path":"\/documentation\/codeeditlanguages\/update-languages","title":"Update Languages","type":"article"},{"title":"Structs","type":"groupMarker"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/add-languages","title":"Add Languages","type":"article"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/id","title":"let id: TreeSitterLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/tsname","title":"let tsName: String","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/extensions","title":"let extensions: Set<String>","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/parentqueryurl","title":"let parentQueryURL: URL?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/tsname","title":"let tsName: String","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/queryurl","title":"var queryURL: URL?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/language","title":"var language: Language?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/additionalhighlights","title":"let additionalHighlights: Set<String>?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/alllanguages","title":"static let allLanguages: [CodeLanguage]","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/default","title":"static let `default`: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/agda","title":"static let agda: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/bash","title":"static let bash: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/c","title":"static let c: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/cpp","title":"static let cpp: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/csharp","title":"static let cSharp: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/css","title":"static let css: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/dart","title":"static let dart: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/dockerfile","title":"static let dockerfile: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/elixir","title":"static let elixir: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/go","title":"static let go: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/gomod","title":"static let goMod: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/haskell","title":"static let haskell: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/html","title":"static let html: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/java","title":"static let java: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/javascript","title":"static let javascript: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/jsdoc","title":"static let jsdoc: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/json","title":"static let json: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/jsx","title":"static let jsx: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/julia","title":"static let julia: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/kotlin","title":"static let kotlin: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/lua","title":"static let lua: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/markdown","title":"static let markdown: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/markdowninline","title":"static let markdownInline: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/objc","title":"static let objc: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/perl","title":"static let perl: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/php","title":"static let php: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/python","title":"static let python: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/ruby","title":"static let ruby: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/rust","title":"static let rust: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/scala","title":"static let scala: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/sql","title":"static let sql: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/swift","title":"static let swift: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/toml","title":"static let toml: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/verilog","title":"static let verilog: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/yaml","title":"static let yaml: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/zig","title":"static let zig: CodeLanguage","type":"property"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/additionalidentifiers","title":"let additionalIdentifiers: Set<String>","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/documentationcommentstrings","title":"let documentationCommentStrings: Set<DocumentationComments>","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/linecommentstring","title":"let lineCommentString: String","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/rangecommentstrings","title":"let rangeCommentStrings: (String, String)","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/ocaml","title":"static let ocaml: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/ocamlinterface","title":"static let ocamlInterface: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/regex","title":"static let regex: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/tsx","title":"static let tsx: CodeLanguage","type":"property"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/typescript","title":"static let typescript: CodeLanguage","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/detectlanguagefrom(url:prefixbuffer:suffixbuffer:)","title":"static func detectLanguageFrom(url: URL, prefixBuffer: String?, suffixBuffer: String?) -> CodeLanguage","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/==(_:_:)","title":"static func == (CodeLanguage, CodeLanguage) -> Bool","type":"op"}],"path":"\/documentation\/codeeditlanguages\/codelanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/codelanguage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/codeeditlanguages\/codelanguage\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/codeeditlanguages\/codelanguage","title":"CodeLanguage","type":"struct"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/shared","title":"static let shared: TreeSitterModel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/query(for:)","title":"func query(for: TreeSitterLanguage) -> Query?","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/bashquery","title":"var bashQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/cquery","title":"var cQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/cppquery","title":"var cppQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/csharpquery","title":"var cSharpQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/cssquery","title":"var cssQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/dartquery","title":"var dartQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/dockerfilequery","title":"var dockerfileQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/elixirquery","title":"var elixirQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/goquery","title":"var goQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/gomodquery","title":"var goModQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/haskellquery","title":"var haskellQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/htmlquery","title":"var htmlQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/javaquery","title":"var javaQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/javascriptquery","title":"var javascriptQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/jsdocquery","title":"var jsdocQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/jsonquery","title":"var jsonQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/jsxquery","title":"var jsxQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/kotlinquery","title":"var kotlinQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/luaquery","title":"var luaQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/markdownquery","title":"var markdownQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/markdowninlinequery","title":"var markdownInlineQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/objcquery","title":"var objcQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/ocamlquery","title":"var ocamlQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/ocamlinterfacequery","title":"var ocamlInterfaceQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/phpquery","title":"var phpQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/pythonquery","title":"var pythonQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/rubyquery","title":"var rubyQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/rustquery","title":"var rustQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/scalaquery","title":"var scalaQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/sqlquery","title":"var sqlQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/swiftquery","title":"var swiftQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/tomlquery","title":"var tomlQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/yamlquery","title":"var yamlQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/zigquery","title":"var zigQuery: Query?","type":"property"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/regexquery","title":"var regexQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/tsxquery","title":"var tsxQuery: Query?","type":"property"},{"path":"\/documentation\/codeeditlanguages\/treesittermodel\/typescriptquery","title":"var typescriptQuery: Query?","type":"property"}],"path":"\/documentation\/codeeditlanguages\/treesittermodel","title":"TreeSitterModel","type":"class"},{"title":"Enums","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/agda","title":"case agda","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/bash","title":"case bash","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/c","title":"case c","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/csharp","title":"case cSharp","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/cpp","title":"case cpp","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/css","title":"case css","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/dart","title":"case dart","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/dockerfile","title":"case dockerfile","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/elixir","title":"case elixir","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/go","title":"case go","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/gomod","title":"case goMod","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/haskell","title":"case haskell","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/html","title":"case html","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/java","title":"case java","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/javascript","title":"case javascript","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/jsdoc","title":"case jsdoc","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/json","title":"case json","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/jsx","title":"case jsx","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/julia","title":"case julia","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/kotlin","title":"case kotlin","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/lua","title":"case lua","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/markdown","title":"case markdown","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/markdowninline","title":"case markdownInline","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/objc","title":"case objc","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/ocaml","title":"case ocaml","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/ocamlinterface","title":"case ocamlInterface","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/perl","title":"case perl","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/php","title":"case php","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/plaintext","title":"case plainText","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/python","title":"case python","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/regex","title":"case regex","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/ruby","title":"case ruby","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/rust","title":"case rust","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/scala","title":"case scala","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/sql","title":"case sql","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/swift","title":"case swift","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/toml","title":"case toml","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/tsx","title":"case tsx","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/typescript","title":"case typescript","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/verilog","title":"case verilog","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/yaml","title":"case yaml","type":"case"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/zig","title":"case zig","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/codeeditlanguages\/treesitterlanguage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/codeeditlanguages\/treesitterlanguage","title":"TreeSitterLanguage","type":"enum"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/documentationcomments\/==(_:_:)","title":"static func == (DocumentationComments, DocumentationComments) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/documentationcomments\/pair(_:)","title":"case pair((String, String))","type":"case"},{"path":"\/documentation\/codeeditlanguages\/documentationcomments\/single(_:)","title":"case single(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/documentationcomments\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/codeeditlanguages\/documentationcomments\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/codeeditlanguages\/documentationcomments\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/codeeditlanguages\/documentationcomments","title":"DocumentationComments","type":"enum"}],"path":"\/documentation\/codeeditlanguages","title":"CodeEditLanguages","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}